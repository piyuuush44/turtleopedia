{
  "_id": {
    "$oid": "5eedc63b0a111800175cb980"
  },
  "is_top": false,
  "content": [
    {
      "type": "Text",
      "text": "In our terminal, we can create our directory and run npm init to get started.",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "node $mkdir nodejs-blog-tutorial\nnode $cd nodejs-blog-tutorial\nnodejs-blog-tutorial $npm init",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "\n{\n  \"name\": \"nodejs-blog-tutorial\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Create a blog using Node.js\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [\n    \"blog\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n",
      "imageUrl": null
    },
    {
      "type": "ImageText",
      "text": "While we are at it, we can install nodemon for hot reloading of our JavaScript files. No need to constantly have to manually stop and re start your node application.\n\nnodejs-blog-tutorial $npm i nodemon\nNow let’s add the entry point to our node.js blog project which is index.js.\n\nnodejs-blog-tutorial $touch index.js\nWe will also need to have a public directory in the project.\n\nnodejs-blog-tutorial $mkdir public\nLet’s get started by including express, setting up our public directory, and launching the server.\n\n",
      "imageUrl": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/rGowCSH.png"
    }
  ],
  "no_of_views": {
    "$numberInt": "0"
  },
  "tags": [],
  "title": "Node.js Blog Tutorial",
  "category": "technology",
  "image_url": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/E9wpPLT.png",
  "slug_url": "nodejs-blog-tutorial",
  "feature_content": "In this tutorial we are going to build a blog powered by Node.js on the back end, Bootstrap on the front end, and MongoDB as the data store. We are going to start from scratch and build out the project one step at a time. We’ll see how to include all the packages we’ll need into Node for building the blog. Some of these include Express, Bcrypt, nodemon, express-edge, mongoose, body-parser, express-fileupload, and express-session. We’ll start with basic routes in the index.js file, and then gradually move the application into a Model View Controller architecture. Let’s get started.",
  "createdAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "__v": {
    "$numberInt": "0"
  }
}
{
  "_id": {
    "$oid": "5eedc688b1b66523f91ad5ce"
  },
  "is_top": false,
  "content": [
    {
      "type": "Text",
      "text": "In our terminal, we can create our directory and run npm init to get started.",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "node $mkdir nodejs-blog-tutorial\nnode $cd nodejs-blog-tutorial\nnodejs-blog-tutorial $npm init",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "\n{\n  \"name\": \"nodejs-blog-tutorial\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Create a blog using Node.js\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [\n    \"blog\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n",
      "imageUrl": null
    },
    {
      "type": "ImageText",
      "text": "While we are at it, we can install nodemon for hot reloading of our JavaScript files. No need to constantly have to manually stop and re start your node application.\n\nnodejs-blog-tutorial $npm i nodemon\nNow let’s add the entry point to our node.js blog project which is index.js.\n\nnodejs-blog-tutorial $touch index.js\nWe will also need to have a public directory in the project.\n\nnodejs-blog-tutorial $mkdir public\nLet’s get started by including express, setting up our public directory, and launching the server.\n\n",
      "imageUrl": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/rGowCSH.png"
    }
  ],
  "no_of_views": {
    "$numberInt": "0"
  },
  "tags": [],
  "title": "Node.js Blog Tutorial",
  "category": "technology",
  "image_url": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/E9wpPLT.png",
  "slug_url": "nodejs-blog-tutorial",
  "feature_content": "In this tutorial we are going to build a blog powered by Node.js on the back end, Bootstrap on the front end, and MongoDB as the data store. We are going to start from scratch and build out the project one step at a time. We’ll see how to include all the packages we’ll need into Node for building the blog. Some of these include Express, Bcrypt, nodemon, express-edge, mongoose, body-parser, express-fileupload, and express-session. We’ll start with basic routes in the index.js file, and then gradually move the application into a Model View Controller architecture. Let’s get started.",
  "createdAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "__v": {
    "$numberInt": "0"
  }
}
{
  "_id": {
    "$oid": "5eedc68bb1b66523f91ad5cf"
  },
  "is_top": false,
  "content": [
    {
      "type": "Text",
      "text": "In our terminal, we can create our directory and run npm init to get started.",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "node $mkdir nodejs-blog-tutorial\nnode $cd nodejs-blog-tutorial\nnodejs-blog-tutorial $npm init",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "\n{\n  \"name\": \"nodejs-blog-tutorial\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Create a blog using Node.js\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [\n    \"blog\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n",
      "imageUrl": null
    },
    {
      "type": "ImageText",
      "text": "While we are at it, we can install nodemon for hot reloading of our JavaScript files. No need to constantly have to manually stop and re start your node application.\n\nnodejs-blog-tutorial $npm i nodemon\nNow let’s add the entry point to our node.js blog project which is index.js.\n\nnodejs-blog-tutorial $touch index.js\nWe will also need to have a public directory in the project.\n\nnodejs-blog-tutorial $mkdir public\nLet’s get started by including express, setting up our public directory, and launching the server.\n\n",
      "imageUrl": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/rGowCSH.png"
    }
  ],
  "no_of_views": {
    "$numberInt": "0"
  },
  "tags": [],
  "title": "Node.js Blog Tutorial",
  "category": "technology",
  "image_url": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/E9wpPLT.png",
  "slug_url": "nodejs-blog-tutorial",
  "feature_content": "In this tutorial we are going to build a blog powered by Node.js on the back end, Bootstrap on the front end, and MongoDB as the data store. We are going to start from scratch and build out the project one step at a time. We’ll see how to include all the packages we’ll need into Node for building the blog. Some of these include Express, Bcrypt, nodemon, express-edge, mongoose, body-parser, express-fileupload, and express-session. We’ll start with basic routes in the index.js file, and then gradually move the application into a Model View Controller architecture. Let’s get started.",
  "createdAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "__v": {
    "$numberInt": "0"
  }
}
{
  "_id": {
    "$oid": "5eedc68eb1b66523f91ad5d0"
  },
  "is_top": false,
  "content": [
    {
      "type": "Text",
      "text": "In our terminal, we can create our directory and run npm init to get started.",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "node $mkdir nodejs-blog-tutorial\nnode $cd nodejs-blog-tutorial\nnodejs-blog-tutorial $npm init",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "\n{\n  \"name\": \"nodejs-blog-tutorial\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Create a blog using Node.js\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [\n    \"blog\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n",
      "imageUrl": null
    },
    {
      "type": "ImageText",
      "text": "While we are at it, we can install nodemon for hot reloading of our JavaScript files. No need to constantly have to manually stop and re start your node application.\n\nnodejs-blog-tutorial $npm i nodemon\nNow let’s add the entry point to our node.js blog project which is index.js.\n\nnodejs-blog-tutorial $touch index.js\nWe will also need to have a public directory in the project.\n\nnodejs-blog-tutorial $mkdir public\nLet’s get started by including express, setting up our public directory, and launching the server.\n\n",
      "imageUrl": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/rGowCSH.png"
    }
  ],
  "no_of_views": {
    "$numberInt": "0"
  },
  "tags": [],
  "title": "Node.js Blog Tutorial",
  "category": "technology",
  "image_url": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/E9wpPLT.png",
  "slug_url": "nodejs-blog-tutorial",
  "feature_content": "In this tutorial we are going to build a blog powered by Node.js on the back end, Bootstrap on the front end, and MongoDB as the data store. We are going to start from scratch and build out the project one step at a time. We’ll see how to include all the packages we’ll need into Node for building the blog. Some of these include Express, Bcrypt, nodemon, express-edge, mongoose, body-parser, express-fileupload, and express-session. We’ll start with basic routes in the index.js file, and then gradually move the application into a Model View Controller architecture. Let’s get started.",
  "createdAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "__v": {
    "$numberInt": "0"
  }
}
{
  "_id": {
    "$oid": "5eedc691b1b66523f91ad5d1"
  },
  "is_top": false,
  "content": [
    {
      "type": "Text",
      "text": "In our terminal, we can create our directory and run npm init to get started.",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "node $mkdir nodejs-blog-tutorial\nnode $cd nodejs-blog-tutorial\nnodejs-blog-tutorial $npm init",
      "imageUrl": null
    },
    {
      "type": "Code",
      "text": "\n{\n  \"name\": \"nodejs-blog-tutorial\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Create a blog using Node.js\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [\n    \"blog\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n",
      "imageUrl": null
    },
    {
      "type": "ImageText",
      "text": "While we are at it, we can install nodemon for hot reloading of our JavaScript files. No need to constantly have to manually stop and re start your node application.\n\nnodejs-blog-tutorial $npm i nodemon\nNow let’s add the entry point to our node.js blog project which is index.js.\n\nnodejs-blog-tutorial $touch index.js\nWe will also need to have a public directory in the project.\n\nnodejs-blog-tutorial $mkdir public\nLet’s get started by including express, setting up our public directory, and launching the server.\n\n",
      "imageUrl": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/rGowCSH.png"
    }
  ],
  "no_of_views": {
    "$numberInt": "0"
  },
  "tags": [],
  "title": "Node.js Blog Tutorial",
  "category": "technology",
  "image_url": "https://storage.cloud.google.com/turtleopedia_assets_dev/images/E9wpPLT.png",
  "slug_url": "nodejs-blog-tutorial",
  "feature_content": "In this tutorial we are going to build a blog powered by Node.js on the back end, Bootstrap on the front end, and MongoDB as the data store. We are going to start from scratch and build out the project one step at a time. We’ll see how to include all the packages we’ll need into Node for building the blog. Some of these include Express, Bcrypt, nodemon, express-edge, mongoose, body-parser, express-fileupload, and express-session. We’ll start with basic routes in the index.js file, and then gradually move the application into a Model View Controller architecture. Let’s get started.",
  "createdAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1592641083873"
    }
  },
  "__v": {
    "$numberInt": "0"
  }
}
